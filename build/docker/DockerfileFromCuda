# base runtime devel
ARG CUDA_TAG=devel
ARG CUDA_VERSION=12.5.0
# ubuntu22.04 ubuntu20.04
ARG LINUX_TAG=ubuntu22.04
ARG PYTHON_VERSION=python3.10

FROM nvidia/cuda:${CUDA_VERSION}-${CUDA_TAG}-${LINUX_TAG} as base

# Set environment variables
ENV LANG=en_US.UTF-8 \ 
  LC_ALL=en_US.UTF-8 \
  LANGUAGE=en_US:en \
  TZ=Asia/Shanghai

WORKDIR /app

# Set up timezone
# install
RUN --mount=type=bind,source=requirements.txt,target=requirements.txt \
  --mount=type=bind,source=build/wheels,target=/wheels \
  ln -fs /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime && echo '$TZ' > /etc/time \
  && set -ex \
  && apt-get update && apt-get upgrade -y \
  && apt-get install software-properties-common -y \
  && add-apt-repository ppa:deadsnakes/ppa -y \
  && apt-get update && apt-get install -y --no-install-recommends ${PYTHON_VERSION} \
  && update-alternatives --install /usr/bin/python python /usr/bin/${PYTHON_VERSION} 1 \
  && apt-get install -y --no-install-recommends python3-pip \
  && pip install --upgrade pip \
  && apt-get install -y --no-install-recommends  ca-certificates \
  libjpeg-dev \
  libpng-dev \
  supervisor \
  && pip install -r requirements.txt \
  && pip install /wheels/GDAL-3.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl \
  && adduser --uid 10001 --disabled-password --gecos "" --home "/home/appuser" appuser \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*  /tmp/* /var/tmp/*\
  && rm -rf /var/cache/apk/*

COPY build/docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY build/docker/supervisord.conf /app/build/docker/supervisord.conf

RUN set -ex \
  && chmod 777 /etc/supervisor \
  && chown -R appuser:appuser /app 

# Switch to the non-privileged user to run the application.
USER appuser

# Copy the source code into the container.
# COPY . .

# method 2 not debuged
# COPY build/docker/start.sh /app/start.sh
# RUN  chmod +x /app/start.sh 

# Expose the port that the application listens on.
EXPOSE 55177

HEALTHCHECK CMD curl -fs http://localhost:55177/ais/api/v1/health || exit 1

# Run the application.
ENTRYPOINT ["/usr/bin/supervisord", "-n"]
